/*! 
  glCheckbox v(0.0.6) 
  (c) 2013-2015
  https://gluenetworks.kilnhg.com/Code/Web-Development
  Release Date: 2015-05-14 
*/

angular.module("glCheckbox", []), angular.module("glCheckbox").directive("glCheckbox", [ "$compile", "$timeout", function(a, b) {
    "use strict";
    return {
        restrict: "E",
        scope: {
            settings: "=",
            api: "="
        },
        link: function(c, d, e, f) {
            var g, h, i, j, k, l = "gl-invalid", m = "gl-checkbox-checked", n = "gl-checkbox-disabled";
            c.api = c.api || {}, c.api._data = {}, c.api._data.value = angular.isUndefined(c.settings.value) ? void 0 : c.settings.value, 
            //scope.api._data.options = angular.isUndefined(scope.settings.options) ? undefined : scope.settings.options;
            c.api._data.name = angular.isUndefined(c.settings.name) ? void 0 : c.settings.name, 
            c.api._data.viewLabel = angular.isUndefined(c.settings.viewLabel) ? "On" : c.settings.viewLabel, 
            c.api._data.valid = angular.isUndefined(c.settings.valid) ? !0 : c.settings.valid, 
            c.api._data.error = angular.isUndefined(c.settings.error) ? void 0 : c.settings.error, 
            c.api._data.label = angular.isUndefined(c.settings.label) ? void 0 : c.settings.label, 
            c.api._data.labelChecked = angular.isUndefined(c.settings.labelChecked) ? "On" : c.settings.labelChecked, 
            c.api._data.labelUnchecked = angular.isUndefined(c.settings.labelUnchecked) ? "Off" : c.settings.labelUnchecked, 
            c.api._data.disabled = angular.isUndefined(c.settings.disabled) ? !1 : c.settings.disabled, 
            c.api._data.editable = angular.isUndefined(c.settings.editable) ? !0 : c.settings.editable, 
            c.api._data.onChange = angular.isFunction(c.settings.onChange) ? c.settings.onChange : function() {}, 
            c.api.view = function() {
                u();
            }, c.api.edit = function() {
                t();
            };
            // Templates
            var o = '<input type="checkbox" class="gl-checkbox-input">', p = '<label class="gl-checkbox-label"></label>', q = '<p class="gl-checkbox-error" data-ng-bind="api._data.error"></p>', r = '<label class="gl-checkbox-view-label">{{api._data.label}}</label>', s = '<p class="gl-checkbox-view-value">{{api._data.value ? api._data.labelChecked : api._data.labelUnchecked}}</p>';
            c.api.setInvalid = function(a) {
                c.api._data.valid = !1, c.api._data.error = angular.isString(a) ? a : void 0, v();
            }, c.api.setValid = function() {
                c.api._data.valid = !0, v();
            }, c.api.setValue = function(a) {
                a ? (c.api._data.value = !0, g.attr("checked", !0), h.addClass(m)) : (c.api._data.value = !1, 
                g.removeAttr("checked"), h.removeClass(m));
            }, c.api.getValue = function() {
                return c.api._data.value;
            }, c.api.disable = function() {
                c.api._data.disabled = !0, g.attr("disabled", !0), h.addClass(n);
            }, c.api.enable = function() {
                c.api._data.disabled = !1, g.removeAttr("disabled"), h.removeClass(n);
            };
            var t = function() {
                c.api._data.editable = !0, d.children().remove(), g = angular.element(o), g.attr({
                    name: c.api._data.name,
                    id: c.api._data.name,
                    value: c.api._data.value
                }), h = angular.element(p), h.html(c.api._data.label), h.on("click", function() {
                    angular.isUndefined(g.attr("disabled")) && (c.api.setValue(!c.api._data.value), 
                    c.api._data.onChange(c.api._data.value));
                }), d.append(a(g)(c)), d.append(a(h)(c)), angular.isUndefined(c.api._data.value) || c.api.setValue(c.api._data.value), 
                1 == c.api._data.disabled && c.api.disable(), v();
            }, u = function() {
                c.api._data.editable = !1, d.children().remove(), angular.isString(c.api._data.label) && (j = a(angular.element(r))(c), 
                d.append(j)), k = a(angular.element(s))(c), d.append(k);
            }, v = function() {
                angular.isUndefined(i) || i.remove(), c.api._data.editable && (c.api._data.valid ? (g.removeClass(l), 
                h.removeClass(l)) : (g.addClass(l), h.addClass(l), angular.isString(c.api._data.error) && b(function() {
                    i = a(angular.element(q))(c), // ensure .error has been updated prior to this compile
                    d.append(i);
                }, 0)));
            };
            c.api._data.editable ? t() : u();
        }
    };
} ]);
//# sourceMappingURL=glcheckbox.min.js.map